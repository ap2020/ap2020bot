service: ap2020bot

frameworkVersion: '2'

plugins:
  - serverless-webpack
  - serverless-dynamodb-local # orders matter
  # - serverless-offline

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  # config for dynamodb-local
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  #region:
  environment: '${file(.env.js)}'
    # DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        # - dynamodb:Query
        # - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.WATCH_PORTAL_DYNAMODB_TABLE}"

functions:
  hello:
    handler: handler.hello
    events:
      - schedule:
          rate: 'cron(5 * * * ? *)'
          
resources:
  Resources:
    WatchPortalDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      # DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.WATCH_PORTAL_DYNAMODB_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          -
            AttributeName: key
            AttributeType: S
        KeySchema:
          -
            AttributeName: key
            KeyType: HASH

